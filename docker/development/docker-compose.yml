version: "3.8"
services:
  indtip:
    # build:
    #   context: .
      # dockerfile: dev.Dockerfile
    image: dot-golang:latest
    container_name: dot-golang-backend
    depends_on: 
      - reverse-proxy
    ports:
      - "8000"
    labels:
      # Explicitly tell Traefik to expose this container
      - "traefik.enable=true"
      # The domain the service will respond to
      - "traefik.http.routers.dot-golang.rule=Host(`dot-golang.com`) && PathPrefix(`/api`)"
      # Allow request only from the predefined entry point named "web"
      - "traefik.http.routers.dot-golang.entrypoints=web"
      - "traefik.http.services.my-app.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.addAuth.headers.accesscontrolallowmethods=GET, POST PUT, DELETE"
      - "traefik.http.middlewares.addAuth.headers.accesscontrolalloworiginlist=intip.com"
      - "traefik.http.middlewares.addAuth.headers.accesscontrolallowheaders=X-Requested-With, Content-Type, Content-Length, Authorization"
      # - traefik.http.middlewares.pink-ratelimit.ratelimit.average=10
      # - traefik.http.middlewares.pink-ratelimit.ratelimit.period=10s
      # - traefik.http.middlewares.pink-ratelimit.ratelimit.burst=1
      # - traefik.http.middlewares.pink-ratelimit.ratelimit.sourcecriterion.ipstrategy.excludedips=10.0.0.4
      # - traefik.http.middlewares.pink-ratelimit.ratelimit.sourcecriterion.requestheadername=X-Real-Ip
      # - traefik.http.middlewares.pink-ratelimit.ratelimit.sourcecriterion.requesthost=true
    env_file: ../../config.env
    volumes:
      - ../../:/app
    networks:
      - dot-golang-network
  reverse-proxy:
    image: traefik:v2.4
    container_name: dot-golang-proxy
    command:
      - "--api.insecure=true"
      # Enabling docker provider
      - "--providers.docker=true"
      # Do not expose containers unless explicitly told so
      - "--providers.docker.exposedbydefault=false"
      # Traefik will listen to incoming request on the port 80 (HTTP)
      - "--entrypoints.web.address=:80"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      # - /var/run/docker.sock:/var/run/docker.sock
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - dot-golang-network

networks:
  dot-golang-network:
    external: true